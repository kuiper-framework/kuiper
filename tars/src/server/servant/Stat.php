<?php

declare(strict_types=1);

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: 0.6
 */

namespace kuiper\tars\server\servant;

use kuiper\tars\attribute\TarsProperty;

final class Stat
{
    /**
     * @var string
     */
    #[TarsProperty(type: "string", order: 0)]
    public readonly string $startTime;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 1)]
    public readonly int $connections;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 2)]
    public readonly int $acceptCount;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 3)]
    public readonly int $closeCount;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 4)]
    public readonly int $requestCount;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 5)]
    public readonly int $dispatchCount;

    /**
     * @var int
     */
    #[TarsProperty(type: "int", order: 6)]
    public readonly int $pendingTasks;

    public function __construct(
        string $startTime,
        int $connections,
        int $acceptCount,
        int $closeCount,
        int $requestCount,
        int $dispatchCount,
        int $pendingTasks
    ) {
          $this->startTime = $startTime;
          $this->connections = $connections;
          $this->acceptCount = $acceptCount;
          $this->closeCount = $closeCount;
          $this->requestCount = $requestCount;
          $this->dispatchCount = $dispatchCount;
          $this->pendingTasks = $pendingTasks;
    }
}
